/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package oodms.deliver;

import java.util.Arrays;
import javax.swing.table.DefaultTableModel;
import oodms.oop.Create3DArray;
import oodms.oop.FlushAndWrite;
import oodms.oop.SaveSelected;
import oodms.oop.SearchFileData;

/**
 *
 * @author asus
 */
public class DeliveryMgmt extends javax.swing.JFrame {

    /**
     * Creates new form DeliveryMgmt
     */
    public DeliveryMgmt() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        deliveryMgmtPanel = new javax.swing.JPanel();
        deliveryMgmtLabel = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        DeliveryTable = new javax.swing.JTable();
        listDeliveryLabel = new javax.swing.JLabel();
        backgroundPanel1 = new javax.swing.JPanel();
        AcceptBT = new javax.swing.JButton();
        backBT = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        deliveryMgmtPanel.setBackground(new java.awt.Color(250, 242, 224));

        deliveryMgmtLabel.setFont(new java.awt.Font("Montserrat", 1, 24)); // NOI18N
        deliveryMgmtLabel.setForeground(new java.awt.Color(76, 43, 24));
        deliveryMgmtLabel.setText("Delivery Management");

        DeliveryTable.setBackground(new java.awt.Color(230, 207, 201));
        DeliveryTable.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        DeliveryTable.setFont(new java.awt.Font("Karla", 0, 14)); // NOI18N
        DeliveryTable.setForeground(new java.awt.Color(76, 43, 24));
        DeliveryTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Delivery ID", "Username", "Address", "Delivery Status"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        DeliveryTable.setGridColor(new java.awt.Color(230, 207, 201));
        DeliveryTable.setSelectionBackground(new java.awt.Color(184, 145, 104));
        DeliveryTable.setSelectionForeground(new java.awt.Color(76, 43, 24));
        DeliveryTable.setShowVerticalLines(true);
        jScrollPane2.setViewportView(DeliveryTable);

        listDeliveryLabel.setFont(new java.awt.Font("Montserrat", 1, 18)); // NOI18N
        listDeliveryLabel.setForeground(new java.awt.Color(76, 43, 24));
        listDeliveryLabel.setText("Delivery List");

        backgroundPanel1.setBackground(new java.awt.Color(230, 207, 201));

        AcceptBT.setBackground(new java.awt.Color(184, 145, 104));
        AcceptBT.setFont(new java.awt.Font("Montserrat", 1, 14)); // NOI18N
        AcceptBT.setForeground(new java.awt.Color(76, 43, 24));
        AcceptBT.setText("Accept Order");
        AcceptBT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AcceptBTActionPerformed(evt);
            }
        });

        backBT.setBackground(new java.awt.Color(184, 145, 104));
        backBT.setFont(new java.awt.Font("Montserrat", 1, 14)); // NOI18N
        backBT.setForeground(new java.awt.Color(76, 43, 24));
        backBT.setText("Back");
        backBT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backBTActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout backgroundPanel1Layout = new javax.swing.GroupLayout(backgroundPanel1);
        backgroundPanel1.setLayout(backgroundPanel1Layout);
        backgroundPanel1Layout.setHorizontalGroup(
            backgroundPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(backgroundPanel1Layout.createSequentialGroup()
                .addGap(79, 79, 79)
                .addComponent(AcceptBT)
                .addGap(58, 58, 58)
                .addComponent(backBT)
                .addContainerGap(114, Short.MAX_VALUE))
        );
        backgroundPanel1Layout.setVerticalGroup(
            backgroundPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(backgroundPanel1Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(backgroundPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(AcceptBT)
                    .addComponent(backBT))
                .addContainerGap(20, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout deliveryMgmtPanelLayout = new javax.swing.GroupLayout(deliveryMgmtPanel);
        deliveryMgmtPanel.setLayout(deliveryMgmtPanelLayout);
        deliveryMgmtPanelLayout.setHorizontalGroup(
            deliveryMgmtPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(deliveryMgmtPanelLayout.createSequentialGroup()
                .addGroup(deliveryMgmtPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(deliveryMgmtPanelLayout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addGroup(deliveryMgmtPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(deliveryMgmtLabel)
                            .addGroup(deliveryMgmtPanelLayout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addComponent(listDeliveryLabel))))
                    .addGroup(deliveryMgmtPanelLayout.createSequentialGroup()
                        .addGap(56, 56, 56)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 709, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(deliveryMgmtPanelLayout.createSequentialGroup()
                        .addGap(178, 178, 178)
                        .addComponent(backgroundPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(61, Short.MAX_VALUE))
        );
        deliveryMgmtPanelLayout.setVerticalGroup(
            deliveryMgmtPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(deliveryMgmtPanelLayout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(deliveryMgmtLabel)
                .addGap(27, 27, 27)
                .addComponent(listDeliveryLabel)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 312, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 66, Short.MAX_VALUE)
                .addComponent(backgroundPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(32, 32, 32))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(deliveryMgmtPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(deliveryMgmtPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void AcceptBTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AcceptBTActionPerformed
        // Read text file
        String[][] deliveryArr = new Create3DArray().create3D("/oodms/database/deliveryData.txt");

        for (String[] infoArr : deliveryArr) {
            // Update delivery status
            String previousStatus = DeliveryTable.getValueAt(DeliveryTable.getSelectedRow(), 3).toString();
        
            // Get update status
            String getOrderID = infoArr[0];
            String getDeliveryID = DeliveryTable.getValueAt(DeliveryTable.getSelectedRow(), 0).toString();
            String getUsername = DeliveryTable.getValueAt(DeliveryTable.getSelectedRow(), 1).toString();
            String getAddress = DeliveryTable.getValueAt(DeliveryTable.getSelectedRow(), 2).toString();
            String getStatus = infoArr[4] = "Accepted";
        
            // Rewrite array
            String[] newStatus = new String[] {getOrderID, getDeliveryID, getUsername, getAddress, getStatus};
        
            // Save to txt file
            SaveSelected ss = new SaveSelected();
            String[][] statusArr = ss.saveStatus(newStatus, previousStatus, "/oodms/database/deliveryData.txt");
            new FlushAndWrite().flushAndWrite(statusArr, "src/oodms/database/deliveryData.txt");
        
            System.out.println(Arrays.deepToString(statusArr));
        }
        
        // Clear JPanel from table
        DefaultTableModel deliveryTable = (DefaultTableModel) DeliveryTable.getModel();
        deliveryTable.setRowCount(0);
        
        // Display on table
        for (String[] infoArr : deliveryArr) {
            if(infoArr[4].equals("Pending")) {
                String[] DLArr = new String[] {infoArr[1], infoArr[2], infoArr[3], infoArr[4]};
                deliveryTable.addRow(DLArr);
            }
        }
    }//GEN-LAST:event_AcceptBTActionPerformed

    private void backBTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backBTActionPerformed
        // Back button
        // Back to Dashboard page
        new staffDashboard().setVisible(true);
        dispose();
    }//GEN-LAST:event_backBTActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        // When window open
        // Clear JPanel from table
        DefaultTableModel deliveryTable = (DefaultTableModel) DeliveryTable.getModel();
        deliveryTable.setRowCount(0);
        
        // Read text file
        String[][] deliveryArr = new Create3DArray().create3D("/oodms/database/deliveryData.txt");
        
        System.out.println(Arrays.deepToString(deliveryArr));
        
        // Display on table
        for (String[] infoArr : deliveryArr) {
            if(infoArr[4].equals("Pending")) {
                String[] DLArr = new String[] {infoArr[1], infoArr[2], infoArr[3], infoArr[4]};
                deliveryTable.addRow(DLArr);
            }
        }
    }//GEN-LAST:event_formWindowOpened

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DeliveryMgmt.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DeliveryMgmt.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DeliveryMgmt.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DeliveryMgmt.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new DeliveryMgmt().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AcceptBT;
    private javax.swing.JTable DeliveryTable;
    private javax.swing.JButton backBT;
    private javax.swing.JPanel backgroundPanel1;
    private javax.swing.JLabel deliveryMgmtLabel;
    private javax.swing.JPanel deliveryMgmtPanel;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel listDeliveryLabel;
    // End of variables declaration//GEN-END:variables
}
