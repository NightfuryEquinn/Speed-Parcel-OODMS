package oodms.customer;

import java.awt.Font;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumnModel;
import oodms.oop.FeedbackRating;
import oodms.oop.FlushAndWrite;
import oodms.oop.SaveSelected;
import oodms.oop.SearchFileData;

public class FeedbackHistoryDisplay extends javax.swing.JFrame {

    // Accept customer username
    private static String acceptUsername;
    
    /**
     * Creates new form FeedbackMgmtDisplay
     * @param acceptUsername
     */
    public FeedbackHistoryDisplay(String acceptUsername) {
        initComponents();
        
        FeedbackHistoryDisplay.acceptUsername = acceptUsername;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        feedbackHistoryPanel = new javax.swing.JPanel();
        feedbackHistoryLabel = new javax.swing.JLabel();
        backgroundPanel1 = new javax.swing.JPanel();
        ratingLabel = new javax.swing.JLabel();
        ratingSlider = new javax.swing.JSlider();
        feedbackLabel = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        inputFeedback = new javax.swing.JTextArea();
        submitBtn = new javax.swing.JButton();
        ratingName = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        displayFeedbackTable = new javax.swing.JTable();
        backBtn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Feedback History");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        feedbackHistoryPanel.setBackground(new java.awt.Color(250, 242, 224));

        feedbackHistoryLabel.setFont(new java.awt.Font("Montserrat", 1, 24)); // NOI18N
        feedbackHistoryLabel.setForeground(new java.awt.Color(76, 43, 24));
        feedbackHistoryLabel.setText("Feedback History");

        backgroundPanel1.setBackground(new java.awt.Color(230, 207, 201));

        ratingLabel.setFont(new java.awt.Font("Karla", 0, 14)); // NOI18N
        ratingLabel.setForeground(new java.awt.Color(76, 43, 24));
        ratingLabel.setText("Rating:");

        ratingSlider.setMaximum(5);
        ratingSlider.setMinimum(1);
        ratingSlider.setValue(1);
        ratingSlider.setEnabled(false);
        ratingSlider.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                ratingSliderMouseReleased(evt);
            }
        });

        feedbackLabel.setFont(new java.awt.Font("Karla", 0, 14)); // NOI18N
        feedbackLabel.setForeground(new java.awt.Color(76, 43, 24));
        feedbackLabel.setText("Feedback:");

        inputFeedback.setEditable(false);
        inputFeedback.setBackground(new java.awt.Color(184, 145, 104));
        inputFeedback.setColumns(20);
        inputFeedback.setFont(new java.awt.Font("Karla", 0, 14)); // NOI18N
        inputFeedback.setForeground(new java.awt.Color(76, 43, 24));
        inputFeedback.setLineWrap(true);
        inputFeedback.setRows(5);
        jScrollPane1.setViewportView(inputFeedback);

        submitBtn.setBackground(new java.awt.Color(184, 145, 104));
        submitBtn.setFont(new java.awt.Font("Montserrat", 1, 14)); // NOI18N
        submitBtn.setForeground(new java.awt.Color(76, 43, 24));
        submitBtn.setText("Submit");
        submitBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitBtnActionPerformed(evt);
            }
        });

        ratingName.setFont(new java.awt.Font("Karla", 0, 14)); // NOI18N
        ratingName.setForeground(new java.awt.Color(76, 43, 24));
        ratingName.setText("Extremely Poor");

        javax.swing.GroupLayout backgroundPanel1Layout = new javax.swing.GroupLayout(backgroundPanel1);
        backgroundPanel1.setLayout(backgroundPanel1Layout);
        backgroundPanel1Layout.setHorizontalGroup(
            backgroundPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, backgroundPanel1Layout.createSequentialGroup()
                .addGroup(backgroundPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(backgroundPanel1Layout.createSequentialGroup()
                        .addGroup(backgroundPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(backgroundPanel1Layout.createSequentialGroup()
                                .addGap(29, 29, 29)
                                .addComponent(ratingLabel)
                                .addGap(18, 18, 18)
                                .addComponent(ratingSlider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(251, 251, 251))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, backgroundPanel1Layout.createSequentialGroup()
                                .addGap(169, 169, 169)
                                .addComponent(feedbackLabel)
                                .addGap(18, 18, 18)))
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 206, Short.MAX_VALUE))
                    .addGroup(backgroundPanel1Layout.createSequentialGroup()
                        .addGap(146, 146, 146)
                        .addComponent(ratingName)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(submitBtn)))
                .addGap(25, 25, 25))
        );
        backgroundPanel1Layout.setVerticalGroup(
            backgroundPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(backgroundPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(backgroundPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ratingLabel)
                    .addComponent(ratingSlider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(ratingName)
                .addGap(36, 36, 36))
            .addGroup(backgroundPanel1Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(backgroundPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(feedbackLabel)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(submitBtn)
                .addContainerGap(16, Short.MAX_VALUE))
        );

        displayFeedbackTable.setBackground(new java.awt.Color(230, 207, 201));
        displayFeedbackTable.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        displayFeedbackTable.setFont(new java.awt.Font("Karla", 0, 14)); // NOI18N
        displayFeedbackTable.setForeground(new java.awt.Color(76, 43, 24));
        displayFeedbackTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Order ID", "Item Name", "Amount Paid", "Purchase Date", "Rating", "Your Feedback"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        displayFeedbackTable.setGridColor(new java.awt.Color(230, 207, 201));
        displayFeedbackTable.setSelectionBackground(new java.awt.Color(184, 145, 104));
        displayFeedbackTable.setSelectionForeground(new java.awt.Color(76, 43, 24));
        displayFeedbackTable.setShowVerticalLines(true);
        displayFeedbackTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                displayFeedbackTableMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(displayFeedbackTable);
        // Change Table Header Font
        displayFeedbackTable.getTableHeader().setFont(new Font("Karla", Font.PLAIN, 14));

        // Change Table Column Width
        TableColumnModel columnModel = displayFeedbackTable.getColumnModel();

        columnModel.getColumn(0).setPreferredWidth(75);
        columnModel.getColumn(1).setPreferredWidth(125);
        columnModel.getColumn(2).setPreferredWidth(150);
        columnModel.getColumn(3).setPreferredWidth(125);
        columnModel.getColumn(4).setPreferredWidth(250);

        backBtn.setBackground(new java.awt.Color(184, 145, 104));
        backBtn.setFont(new java.awt.Font("Montserrat", 1, 14)); // NOI18N
        backBtn.setForeground(new java.awt.Color(76, 43, 24));
        backBtn.setText("Back");
        backBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout feedbackHistoryPanelLayout = new javax.swing.GroupLayout(feedbackHistoryPanel);
        feedbackHistoryPanel.setLayout(feedbackHistoryPanelLayout);
        feedbackHistoryPanelLayout.setHorizontalGroup(
            feedbackHistoryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(feedbackHistoryPanelLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(feedbackHistoryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(feedbackHistoryLabel)
                    .addGroup(feedbackHistoryPanelLayout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addGroup(feedbackHistoryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jScrollPane2)
                            .addComponent(backgroundPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addComponent(backBtn))
                .addContainerGap(47, Short.MAX_VALUE))
        );
        feedbackHistoryPanelLayout.setVerticalGroup(
            feedbackHistoryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(feedbackHistoryPanelLayout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(feedbackHistoryLabel)
                .addGap(26, 26, 26)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(41, 41, 41)
                .addComponent(backgroundPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 30, Short.MAX_VALUE)
                .addComponent(backBtn)
                .addGap(21, 21, 21))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(feedbackHistoryPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(feedbackHistoryPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void displayFeedbackTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_displayFeedbackTableMouseClicked
        int selectedRow = displayFeedbackTable.getSelectedRow();
        
        String checkRating = (String) displayFeedbackTable.getValueAt(selectedRow, 4);
        
        if((checkRating == null) || (checkRating.equals("")) || (checkRating.isBlank())) {
            ratingSlider.setValue(1);
            inputFeedback.setText("");
            
            ratingSlider.setEnabled(true);
            inputFeedback.setEditable(true);
            
            submitBtn.setEnabled(true);
        } else {
            ratingSlider.setValue(1);
            inputFeedback.setText("");
            
            ratingSlider.setEnabled(false);
            inputFeedback.setEditable(false);
            
            submitBtn.setEnabled(false);
        }
    }//GEN-LAST:event_displayFeedbackTableMouseClicked

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        ratingSlider.setValue(1);
        inputFeedback.setText("");

        ratingSlider.setEnabled(false);
        inputFeedback.setEditable(false);

        submitBtn.setEnabled(false);
        
        DefaultTableModel feedbackTable = (DefaultTableModel) displayFeedbackTable.getModel();
        feedbackTable.setRowCount(0);
        
        String orderID, itemName, amountPaid, purchaseDate, rating, feedback;
        
        String[][] getUserOrderData = new SearchFileData().searchData(acceptUsername, 1, "/oodms/database/order.txt");
        String[][] getUserPaymentData = new SearchFileData().searchData(acceptUsername, 2, "/oodms/database/payment.txt");
        String[][] getUserFeedbackData = new SearchFileData().searchData(acceptUsername, 1, "/oodms/database/feedback.txt");
        
        for(int i = 0; i < getUserOrderData.length; i++) {
            // Order
            orderID = getUserOrderData[i][0];
            itemName = getUserOrderData[i][2];
            purchaseDate = getUserOrderData[i][6];
            
            // Payment
            amountPaid = getUserPaymentData[i][5];
            
            // Feedback
            rating = getUserFeedbackData[i][2];
            feedback = getUserFeedbackData[i][3];
            
            String[] feedbackHistoryArr = new String[] {orderID, itemName, amountPaid, purchaseDate, rating, feedback};
            feedbackTable.addRow(feedbackHistoryArr);
        }
    }//GEN-LAST:event_formWindowOpened

    private void submitBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submitBtnActionPerformed
        int selectedRow = displayFeedbackTable.getSelectedRow();
        
        String getOrderID = (String) displayFeedbackTable.getValueAt(selectedRow, 0);
        
        String[] newChangesArr = new String[] {
            getOrderID,
            acceptUsername,
            ratingName.getText(),
            inputFeedback.getText()
        };
        
        int confirmSubmit = JOptionPane.showConfirmDialog(null, "Are you sure to submit your feedback now? You can't change it anymore", "Confirm submit?", JOptionPane.YES_NO_OPTION);
        
        if(!inputFeedback.getText().equals("")) {
            if(confirmSubmit == JOptionPane.YES_OPTION) {
                SaveSelected ss = new SaveSelected();
                String[][] newChangesArrToSave = ss.saveFeedback(newChangesArr, getOrderID, acceptUsername);

                FlushAndWrite faw = new FlushAndWrite();
                faw.flushAndWrite(newChangesArrToSave, "src/oodms/database/feedback.txt");

                JOptionPane.showMessageDialog(null, "Your feedback has been submitted. Please refresh the page to view it.\nNOTE: If it contains sensitive contents, admins will not hestitate to delete your feedback and take actions upon you.", "Success", JOptionPane.INFORMATION_MESSAGE);
            } else {
                System.out.println("Do nothing");
            }
        } else {
            JOptionPane.showMessageDialog(null, "Please fill up the empty field.", "Empty fields", JOptionPane.INFORMATION_MESSAGE);
        }   
        
        ratingSlider.setValue(1);
        inputFeedback.setText("");

        ratingSlider.setEnabled(false);
        inputFeedback.setEditable(false);

        submitBtn.setEnabled(false);
    }//GEN-LAST:event_submitBtnActionPerformed

    private void backBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backBtnActionPerformed
        new CustomerDashboard(acceptUsername).setVisible(true);
        dispose();
    }//GEN-LAST:event_backBtnActionPerformed

    private void ratingSliderMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ratingSliderMouseReleased
        int getRatingValue = ratingSlider.getValue();
        
        FeedbackRating displayRating = new FeedbackRating();
        ratingName.setText(displayRating.getRating(getRatingValue));
    }//GEN-LAST:event_ratingSliderMouseReleased

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FeedbackHistoryDisplay.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FeedbackHistoryDisplay.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FeedbackHistoryDisplay.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FeedbackHistoryDisplay.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FeedbackHistoryDisplay(acceptUsername).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backBtn;
    private javax.swing.JPanel backgroundPanel1;
    private javax.swing.JTable displayFeedbackTable;
    private javax.swing.JLabel feedbackHistoryLabel;
    private javax.swing.JPanel feedbackHistoryPanel;
    private javax.swing.JLabel feedbackLabel;
    private javax.swing.JTextArea inputFeedback;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel ratingLabel;
    private javax.swing.JLabel ratingName;
    private javax.swing.JSlider ratingSlider;
    private javax.swing.JButton submitBtn;
    // End of variables declaration//GEN-END:variables
}
