package oodms.admin;

import java.awt.Font;
import java.util.Arrays;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumnModel;
import oodms.oop.Create3DArray;
import oodms.oop.SearchFileData;

public class OrderMgmtDisplay extends javax.swing.JFrame {

    /**
     * Creates new form OrderMgmtDisplay
     */
    public OrderMgmtDisplay() {
        initComponents();
        
        // Include a default no category
        inputSearchStatus.addItem("");
        
        inputSearchStatus.addItem("Unassigned");
        inputSearchStatus.addItem("Ongoing");
        inputSearchStatus.addItem("Delivered");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        orderMgmtPanel = new javax.swing.JPanel();
        orderMgmtLabel = new javax.swing.JLabel();
        searchOrderLabel = new javax.swing.JLabel();
        backgroundPanel1 = new javax.swing.JPanel();
        searchCustomerLabel = new javax.swing.JLabel();
        inputSearchCustomer = new javax.swing.JTextField();
        searchOrderBtn = new javax.swing.JButton();
        searchOrderStatusLabel = new javax.swing.JLabel();
        inputSearchStatus = new javax.swing.JComboBox<>();
        detailLabel = new javax.swing.JLabel();
        backgroundPanel2 = new javax.swing.JPanel();
        itemNameLabel = new javax.swing.JLabel();
        quantityLabel = new javax.swing.JLabel();
        inputItemName = new javax.swing.JTextField();
        inputQuantity = new javax.swing.JTextField();
        itemPriceLabel = new javax.swing.JLabel();
        inputItemPrice = new javax.swing.JTextField();
        totalPriceLabel = new javax.swing.JLabel();
        inputTotalPrice = new javax.swing.JTextField();
        orderDateLabel = new javax.swing.JLabel();
        inputOrderDate = new javax.swing.JTextField();
        orderStatusLabel = new javax.swing.JLabel();
        inputOrderStatus = new javax.swing.JTextField();
        orderIDLabel = new javax.swing.JLabel();
        inputOrderID = new javax.swing.JTextField();
        customerLabel = new javax.swing.JLabel();
        inputCustomer = new javax.swing.JTextField();
        backBtn = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        displayOrderTable = new javax.swing.JTable();
        listOrderLabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        orderMgmtPanel.setBackground(new java.awt.Color(250, 242, 224));

        orderMgmtLabel.setFont(new java.awt.Font("Montserrat", 1, 24)); // NOI18N
        orderMgmtLabel.setForeground(new java.awt.Color(76, 43, 24));
        orderMgmtLabel.setText("Order Management");

        searchOrderLabel.setFont(new java.awt.Font("Montserrat", 1, 18)); // NOI18N
        searchOrderLabel.setForeground(new java.awt.Color(76, 43, 24));
        searchOrderLabel.setText("Search");

        backgroundPanel1.setBackground(new java.awt.Color(230, 207, 201));

        searchCustomerLabel.setFont(new java.awt.Font("Karla", 0, 14)); // NOI18N
        searchCustomerLabel.setForeground(new java.awt.Color(76, 43, 24));
        searchCustomerLabel.setText("Enter Name:");

        inputSearchCustomer.setBackground(new java.awt.Color(184, 145, 104));
        inputSearchCustomer.setFont(new java.awt.Font("Karla", 0, 14)); // NOI18N
        inputSearchCustomer.setForeground(new java.awt.Color(76, 43, 24));

        searchOrderBtn.setBackground(new java.awt.Color(184, 145, 104));
        searchOrderBtn.setFont(new java.awt.Font("Montserrat", 1, 14)); // NOI18N
        searchOrderBtn.setForeground(new java.awt.Color(76, 43, 24));
        searchOrderBtn.setText("Search");
        searchOrderBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchOrderBtnActionPerformed(evt);
            }
        });

        searchOrderStatusLabel.setFont(new java.awt.Font("Karla", 0, 14)); // NOI18N
        searchOrderStatusLabel.setForeground(new java.awt.Color(76, 43, 24));
        searchOrderStatusLabel.setText("Order Status:");

        inputSearchStatus.setBackground(new java.awt.Color(184, 145, 104));
        inputSearchStatus.setFont(new java.awt.Font("Karla", 0, 14)); // NOI18N
        inputSearchStatus.setForeground(new java.awt.Color(76, 43, 24));

        javax.swing.GroupLayout backgroundPanel1Layout = new javax.swing.GroupLayout(backgroundPanel1);
        backgroundPanel1.setLayout(backgroundPanel1Layout);
        backgroundPanel1Layout.setHorizontalGroup(
            backgroundPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(backgroundPanel1Layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(backgroundPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(searchCustomerLabel)
                    .addComponent(searchOrderStatusLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(backgroundPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(backgroundPanel1Layout.createSequentialGroup()
                        .addComponent(inputSearchCustomer, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 25, Short.MAX_VALUE)
                        .addComponent(searchOrderBtn)
                        .addGap(16, 16, 16))
                    .addGroup(backgroundPanel1Layout.createSequentialGroup()
                        .addComponent(inputSearchStatus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        backgroundPanel1Layout.setVerticalGroup(
            backgroundPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(backgroundPanel1Layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(backgroundPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(searchCustomerLabel)
                    .addComponent(inputSearchCustomer, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(searchOrderBtn))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(backgroundPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(searchOrderStatusLabel)
                    .addComponent(inputSearchStatus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(14, Short.MAX_VALUE))
        );

        detailLabel.setFont(new java.awt.Font("Montserrat", 1, 18)); // NOI18N
        detailLabel.setForeground(new java.awt.Color(76, 43, 24));
        detailLabel.setText("Details");

        backgroundPanel2.setBackground(new java.awt.Color(230, 207, 201));

        itemNameLabel.setFont(new java.awt.Font("Karla", 0, 14)); // NOI18N
        itemNameLabel.setForeground(new java.awt.Color(76, 43, 24));
        itemNameLabel.setText("Item Name:");

        quantityLabel.setFont(new java.awt.Font("Karla", 0, 14)); // NOI18N
        quantityLabel.setForeground(new java.awt.Color(76, 43, 24));
        quantityLabel.setText("Quantity:");

        inputItemName.setEditable(false);
        inputItemName.setBackground(new java.awt.Color(184, 145, 104));
        inputItemName.setFont(new java.awt.Font("Karla", 0, 14)); // NOI18N
        inputItemName.setForeground(new java.awt.Color(76, 43, 24));

        inputQuantity.setEditable(false);
        inputQuantity.setBackground(new java.awt.Color(184, 145, 104));
        inputQuantity.setFont(new java.awt.Font("Karla", 0, 14)); // NOI18N
        inputQuantity.setForeground(new java.awt.Color(76, 43, 24));

        itemPriceLabel.setFont(new java.awt.Font("Karla", 0, 14)); // NOI18N
        itemPriceLabel.setForeground(new java.awt.Color(76, 43, 24));
        itemPriceLabel.setText("Price (RM):");

        inputItemPrice.setEditable(false);
        inputItemPrice.setBackground(new java.awt.Color(184, 145, 104));
        inputItemPrice.setFont(new java.awt.Font("Karla", 0, 14)); // NOI18N
        inputItemPrice.setForeground(new java.awt.Color(76, 43, 24));

        totalPriceLabel.setFont(new java.awt.Font("Karla", 0, 14)); // NOI18N
        totalPriceLabel.setForeground(new java.awt.Color(76, 43, 24));
        totalPriceLabel.setText("Total Price (RM):");

        inputTotalPrice.setEditable(false);
        inputTotalPrice.setBackground(new java.awt.Color(184, 145, 104));
        inputTotalPrice.setFont(new java.awt.Font("Karla", 0, 14)); // NOI18N
        inputTotalPrice.setForeground(new java.awt.Color(76, 43, 24));

        orderDateLabel.setFont(new java.awt.Font("Karla", 0, 14)); // NOI18N
        orderDateLabel.setForeground(new java.awt.Color(76, 43, 24));
        orderDateLabel.setText("Order Date:");

        inputOrderDate.setEditable(false);
        inputOrderDate.setBackground(new java.awt.Color(184, 145, 104));
        inputOrderDate.setFont(new java.awt.Font("Karla", 0, 14)); // NOI18N
        inputOrderDate.setForeground(new java.awt.Color(76, 43, 24));

        orderStatusLabel.setFont(new java.awt.Font("Karla", 0, 14)); // NOI18N
        orderStatusLabel.setForeground(new java.awt.Color(76, 43, 24));
        orderStatusLabel.setText("Order Status:");

        inputOrderStatus.setEditable(false);
        inputOrderStatus.setBackground(new java.awt.Color(184, 145, 104));
        inputOrderStatus.setFont(new java.awt.Font("Karla", 0, 14)); // NOI18N
        inputOrderStatus.setForeground(new java.awt.Color(76, 43, 24));

        orderIDLabel.setFont(new java.awt.Font("Karla", 0, 14)); // NOI18N
        orderIDLabel.setForeground(new java.awt.Color(76, 43, 24));
        orderIDLabel.setText("Order ID:");

        inputOrderID.setEditable(false);
        inputOrderID.setBackground(new java.awt.Color(184, 145, 104));
        inputOrderID.setFont(new java.awt.Font("Karla", 0, 14)); // NOI18N
        inputOrderID.setForeground(new java.awt.Color(76, 43, 24));

        customerLabel.setFont(new java.awt.Font("Karla", 0, 14)); // NOI18N
        customerLabel.setForeground(new java.awt.Color(76, 43, 24));
        customerLabel.setText("Customer Name:");

        inputCustomer.setEditable(false);
        inputCustomer.setBackground(new java.awt.Color(184, 145, 104));
        inputCustomer.setFont(new java.awt.Font("Karla", 0, 14)); // NOI18N
        inputCustomer.setForeground(new java.awt.Color(76, 43, 24));

        javax.swing.GroupLayout backgroundPanel2Layout = new javax.swing.GroupLayout(backgroundPanel2);
        backgroundPanel2.setLayout(backgroundPanel2Layout);
        backgroundPanel2Layout.setHorizontalGroup(
            backgroundPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(backgroundPanel2Layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(backgroundPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(customerLabel)
                    .addComponent(orderIDLabel, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(itemNameLabel, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(quantityLabel, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(itemPriceLabel, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(totalPriceLabel, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(orderDateLabel, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(orderStatusLabel, javax.swing.GroupLayout.Alignment.TRAILING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(backgroundPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(inputOrderID, javax.swing.GroupLayout.DEFAULT_SIZE, 230, Short.MAX_VALUE)
                    .addComponent(inputCustomer)
                    .addComponent(inputItemName, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(inputQuantity, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(inputItemPrice, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(inputTotalPrice, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(inputOrderDate, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(inputOrderStatus))
                .addContainerGap(26, Short.MAX_VALUE))
        );
        backgroundPanel2Layout.setVerticalGroup(
            backgroundPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, backgroundPanel2Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(backgroundPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(orderIDLabel)
                    .addComponent(inputOrderID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(backgroundPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(customerLabel)
                    .addComponent(inputCustomer, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(backgroundPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(inputItemName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(itemNameLabel))
                .addGap(18, 18, 18)
                .addGroup(backgroundPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(quantityLabel)
                    .addComponent(inputQuantity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(backgroundPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(itemPriceLabel)
                    .addComponent(inputItemPrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(backgroundPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(totalPriceLabel)
                    .addComponent(inputTotalPrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(backgroundPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(orderDateLabel)
                    .addComponent(inputOrderDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(backgroundPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(orderStatusLabel)
                    .addComponent(inputOrderStatus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(55, Short.MAX_VALUE))
        );

        backBtn.setBackground(new java.awt.Color(184, 145, 104));
        backBtn.setFont(new java.awt.Font("Montserrat", 1, 14)); // NOI18N
        backBtn.setForeground(new java.awt.Color(76, 43, 24));
        backBtn.setText("Back");
        backBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backBtnActionPerformed(evt);
            }
        });

        displayOrderTable.setBackground(new java.awt.Color(230, 207, 201));
        displayOrderTable.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        displayOrderTable.setFont(new java.awt.Font("Karla", 0, 14)); // NOI18N
        displayOrderTable.setForeground(new java.awt.Color(76, 43, 24));
        displayOrderTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Order ID", "Customer Name", "Item Name", "Quantity", "Item Price (RM)", "Total Price (RM)", "Order Date", "Order Status"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        displayOrderTable.setGridColor(new java.awt.Color(230, 207, 201));
        displayOrderTable.setSelectionBackground(new java.awt.Color(184, 145, 104));
        displayOrderTable.setSelectionForeground(new java.awt.Color(76, 43, 24));
        displayOrderTable.setShowVerticalLines(true);
        displayOrderTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                displayOrderTableMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(displayOrderTable);
        // Change Table Header Font
        displayOrderTable.getTableHeader().setFont(new Font("Karla", Font.PLAIN, 14));

        // Change Table Column Width
        TableColumnModel columnModel = displayOrderTable.getColumnModel();

        columnModel.getColumn(0).setPreferredWidth(75);
        columnModel.getColumn(1).setPreferredWidth(125);
        columnModel.getColumn(2).setPreferredWidth(100);
        columnModel.getColumn(3).setPreferredWidth(100);
        columnModel.getColumn(4).setPreferredWidth(125);
        columnModel.getColumn(5).setPreferredWidth(125);
        columnModel.getColumn(6).setPreferredWidth(100);
        columnModel.getColumn(7).setPreferredWidth(125);

        listOrderLabel.setFont(new java.awt.Font("Montserrat", 1, 18)); // NOI18N
        listOrderLabel.setForeground(new java.awt.Color(76, 43, 24));
        listOrderLabel.setText("List");

        javax.swing.GroupLayout orderMgmtPanelLayout = new javax.swing.GroupLayout(orderMgmtPanel);
        orderMgmtPanel.setLayout(orderMgmtPanelLayout);
        orderMgmtPanelLayout.setHorizontalGroup(
            orderMgmtPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(orderMgmtPanelLayout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(orderMgmtPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(orderMgmtPanelLayout.createSequentialGroup()
                        .addGroup(orderMgmtPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(backBtn)
                            .addComponent(orderMgmtLabel))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(orderMgmtPanelLayout.createSequentialGroup()
                        .addGroup(orderMgmtPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(detailLabel)
                            .addComponent(backgroundPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(backgroundPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(searchOrderLabel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 40, Short.MAX_VALUE)
                        .addGroup(orderMgmtPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(listOrderLabel)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 870, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(33, Short.MAX_VALUE))))
        );
        orderMgmtPanelLayout.setVerticalGroup(
            orderMgmtPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(orderMgmtPanelLayout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(orderMgmtLabel)
                .addGap(18, 18, 18)
                .addGroup(orderMgmtPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(searchOrderLabel)
                    .addComponent(listOrderLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(orderMgmtPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(orderMgmtPanelLayout.createSequentialGroup()
                        .addComponent(backgroundPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(detailLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(backgroundPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 515, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 29, Short.MAX_VALUE)
                .addComponent(backBtn)
                .addGap(22, 22, 22))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(orderMgmtPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(orderMgmtPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void searchOrderBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchOrderBtnActionPerformed
        // Clear text field
        inputOrderID.setText("");
        inputCustomer.setText("");
        inputItemName.setText("");
        inputQuantity.setText("");
        inputItemPrice.setText("");
        inputTotalPrice.setText("");
        inputOrderDate.setText("");
        inputOrderStatus.setText("");
        
        DefaultTableModel orderTable = (DefaultTableModel) displayOrderTable.getModel();
        orderTable.setRowCount(0);
        
        String getCustomer = inputSearchCustomer.getText();
        String getStatus = inputSearchStatus.getSelectedItem().toString();
        
        // Search with customer
        if((!getCustomer.isBlank()) && (getStatus.equals(""))) {
            String[][] getSearchCustomerArr = new SearchFileData().searchData(getCustomer, 1, "/oodms/database/order.txt");
            
            for(String[] getSearchCustomerData : getSearchCustomerArr) {
                orderTable.addRow(getSearchCustomerData);
            }
        // Search with order status
        } else if((getCustomer.isBlank()) && (!getStatus.equals(""))) {
            String[][] getSearchStatusArr = new SearchFileData().searchData(getStatus, 7, "/oodms/database/order.txt");
            
            for(String[] getSearchStatusData : getSearchStatusArr) {
                orderTable.addRow(getSearchStatusData);
            }
        // Search both customer and order status
        } else if((!getCustomer.isBlank()) && (!getStatus.equals(""))) {
            String[][] getSearchCustomerArr = new SearchFileData().searchData(getCustomer, 1, "/oodms/database/order.txt");
            String[][] getSearchStatusArr = new SearchFileData().searchData(getStatus, 7, "/oodms/database/order.txt");
            
            int newArrCount = 0;
            
            for(int i = 0; i < getSearchCustomerArr.length; i++) {
                for(int j = 0; j < getSearchStatusArr.length; j++) {
                    if(Arrays.equals(getSearchCustomerArr[i], getSearchStatusArr[j])) {
                        newArrCount++;
                    }
                }
            }
            
            String[][] getBothSearchArr = new String[newArrCount][getSearchCustomerArr[0].length];
            
            int newArrIndex = 0;
            
            for(int i = 0; i < getSearchCustomerArr.length; i++) {
                for(int j = 0; j < getSearchStatusArr.length; j++) {
                    if(Arrays.equals(getSearchCustomerArr[i], getSearchStatusArr[j])) {
                        getBothSearchArr[newArrIndex++] = getSearchCustomerArr[i];
                    }
                }
            }
            
            for(String[] getBothSearchData : getBothSearchArr) {
                orderTable.addRow(getBothSearchData);
            }
        // Search All
        } else {
            String[][] getAllOrderArr = new Create3DArray().create3D("/oodms/database/order.txt");
            
            for(String[] getAllOrderData : getAllOrderArr) {
                orderTable.addRow(getAllOrderData);
            }
        }
    }//GEN-LAST:event_searchOrderBtnActionPerformed

    private void displayOrderTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_displayOrderTableMouseClicked
        int selectedRow = displayOrderTable.getSelectedRow();

        inputOrderID.setText((String) displayOrderTable.getValueAt(selectedRow, 0));
        inputCustomer.setText((String) displayOrderTable.getValueAt(selectedRow, 1));
        inputItemName.setText((String) displayOrderTable.getValueAt(selectedRow, 2));
        inputQuantity.setText((String) displayOrderTable.getValueAt(selectedRow, 3));
        inputItemPrice.setText((String) displayOrderTable.getValueAt(selectedRow, 4));
        inputTotalPrice.setText((String) displayOrderTable.getValueAt(selectedRow, 5));
        inputOrderDate.setText((String) displayOrderTable.getValueAt(selectedRow, 6));
        inputOrderStatus.setText((String) displayOrderTable.getValueAt(selectedRow, 7));
    }//GEN-LAST:event_displayOrderTableMouseClicked

    private void backBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backBtnActionPerformed
        new AdminDashboard().setVisible(true);
        dispose();
    }//GEN-LAST:event_backBtnActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(OrderMgmtDisplay.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(OrderMgmtDisplay.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(OrderMgmtDisplay.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(OrderMgmtDisplay.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new OrderMgmtDisplay().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backBtn;
    private javax.swing.JPanel backgroundPanel1;
    private javax.swing.JPanel backgroundPanel2;
    private javax.swing.JLabel customerLabel;
    private javax.swing.JLabel detailLabel;
    private javax.swing.JTable displayOrderTable;
    private javax.swing.JTextField inputCustomer;
    private javax.swing.JTextField inputItemName;
    private javax.swing.JTextField inputItemPrice;
    private javax.swing.JTextField inputOrderDate;
    private javax.swing.JTextField inputOrderID;
    private javax.swing.JTextField inputOrderStatus;
    private javax.swing.JTextField inputQuantity;
    private javax.swing.JTextField inputSearchCustomer;
    private javax.swing.JComboBox<String> inputSearchStatus;
    private javax.swing.JTextField inputTotalPrice;
    private javax.swing.JLabel itemNameLabel;
    private javax.swing.JLabel itemPriceLabel;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel listOrderLabel;
    private javax.swing.JLabel orderDateLabel;
    private javax.swing.JLabel orderIDLabel;
    private javax.swing.JLabel orderMgmtLabel;
    private javax.swing.JPanel orderMgmtPanel;
    private javax.swing.JLabel orderStatusLabel;
    private javax.swing.JLabel quantityLabel;
    private javax.swing.JLabel searchCustomerLabel;
    private javax.swing.JButton searchOrderBtn;
    private javax.swing.JLabel searchOrderLabel;
    private javax.swing.JLabel searchOrderStatusLabel;
    private javax.swing.JLabel totalPriceLabel;
    // End of variables declaration//GEN-END:variables
}
