package oodms.admin;

import java.awt.Font;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumnModel;
import oodms.oop.Create3DArray;
import oodms.oop.FlushAndWrite;
import oodms.oop.SaveSelected;
import oodms.oop.SearchFileData;

public class DeliveryMgmtDisplay extends javax.swing.JFrame {

    /**
     * Creates new form DeliveryMgmtDisplay
     */
    public DeliveryMgmtDisplay() {
        initComponents();
        
        // Include a default no category
        inputFilterStatus.addItem("");
        
        inputFilterStatus.addItem("Unassigned");
        inputFilterStatus.addItem("Ongoing");
        inputFilterStatus.addItem("Completed");
        
        // Find all delivery staffs
        String[][] getAllStaffArr = new Create3DArray().create3D("/oodms/database/credentials.txt");

        for(String[] getAllStaffData : getAllStaffArr) {
            if(getAllStaffData[0].toLowerCase().startsWith("delivery")) {
                inputDeliveryStaff.addItem(getAllStaffData[0]);
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        deliveryMgmtPanel = new javax.swing.JPanel();
        deliveryMgmtLabel = new javax.swing.JLabel();
        searchDeliveryLabel = new javax.swing.JLabel();
        backgroundPanel1 = new javax.swing.JPanel();
        filterStatusLabel = new javax.swing.JLabel();
        searchFilterStatus = new javax.swing.JButton();
        inputFilterStatus = new javax.swing.JComboBox<>();
        detailLabel = new javax.swing.JLabel();
        backgroundPanel2 = new javax.swing.JPanel();
        deliveryStaffLabel = new javax.swing.JLabel();
        orderIDLabel = new javax.swing.JLabel();
        orderStatusLabel = new javax.swing.JLabel();
        editBtn = new javax.swing.JButton();
        saveBtn = new javax.swing.JButton();
        inputDeliveryStaff = new javax.swing.JComboBox<>();
        inputOrderStatus = new javax.swing.JComboBox<>();
        inputOrderID = new javax.swing.JTextField();
        customerAddressLabel = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        inputCustomerAddress = new javax.swing.JTextArea();
        customerLabel = new javax.swing.JLabel();
        inputCustomer = new javax.swing.JTextField();
        backBtn = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        displayDeliveryTable = new javax.swing.JTable();
        listDeliveryLabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        deliveryMgmtPanel.setBackground(new java.awt.Color(250, 242, 224));

        deliveryMgmtLabel.setFont(new java.awt.Font("Montserrat", 1, 24)); // NOI18N
        deliveryMgmtLabel.setForeground(new java.awt.Color(76, 43, 24));
        deliveryMgmtLabel.setText("Delivery Management");

        searchDeliveryLabel.setFont(new java.awt.Font("Montserrat", 1, 18)); // NOI18N
        searchDeliveryLabel.setForeground(new java.awt.Color(76, 43, 24));
        searchDeliveryLabel.setText("Search");

        backgroundPanel1.setBackground(new java.awt.Color(230, 207, 201));

        filterStatusLabel.setFont(new java.awt.Font("Karla", 0, 14)); // NOI18N
        filterStatusLabel.setForeground(new java.awt.Color(76, 43, 24));
        filterStatusLabel.setText("Filter Status:");

        searchFilterStatus.setBackground(new java.awt.Color(184, 145, 104));
        searchFilterStatus.setFont(new java.awt.Font("Montserrat", 1, 14)); // NOI18N
        searchFilterStatus.setForeground(new java.awt.Color(76, 43, 24));
        searchFilterStatus.setText("Search");
        searchFilterStatus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchFilterStatusActionPerformed(evt);
            }
        });

        inputFilterStatus.setBackground(new java.awt.Color(184, 145, 104));
        inputFilterStatus.setFont(new java.awt.Font("Karla", 0, 14)); // NOI18N
        inputFilterStatus.setForeground(new java.awt.Color(76, 43, 24));

        javax.swing.GroupLayout backgroundPanel1Layout = new javax.swing.GroupLayout(backgroundPanel1);
        backgroundPanel1.setLayout(backgroundPanel1Layout);
        backgroundPanel1Layout.setHorizontalGroup(
            backgroundPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(backgroundPanel1Layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(filterStatusLabel)
                .addGap(18, 18, 18)
                .addComponent(inputFilterStatus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 65, Short.MAX_VALUE)
                .addComponent(searchFilterStatus)
                .addGap(27, 27, 27))
        );
        backgroundPanel1Layout.setVerticalGroup(
            backgroundPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(backgroundPanel1Layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(backgroundPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(filterStatusLabel)
                    .addComponent(searchFilterStatus)
                    .addComponent(inputFilterStatus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(15, Short.MAX_VALUE))
        );

        detailLabel.setFont(new java.awt.Font("Montserrat", 1, 18)); // NOI18N
        detailLabel.setForeground(new java.awt.Color(76, 43, 24));
        detailLabel.setText("Details");

        backgroundPanel2.setBackground(new java.awt.Color(230, 207, 201));

        deliveryStaffLabel.setFont(new java.awt.Font("Karla", 0, 14)); // NOI18N
        deliveryStaffLabel.setForeground(new java.awt.Color(76, 43, 24));
        deliveryStaffLabel.setText("Delivery Staff:");

        orderIDLabel.setFont(new java.awt.Font("Karla", 0, 14)); // NOI18N
        orderIDLabel.setForeground(new java.awt.Color(76, 43, 24));
        orderIDLabel.setText("Order ID:");

        orderStatusLabel.setFont(new java.awt.Font("Karla", 0, 14)); // NOI18N
        orderStatusLabel.setForeground(new java.awt.Color(76, 43, 24));
        orderStatusLabel.setText("Order Status:");

        editBtn.setBackground(new java.awt.Color(184, 145, 104));
        editBtn.setFont(new java.awt.Font("Montserrat", 1, 14)); // NOI18N
        editBtn.setForeground(new java.awt.Color(76, 43, 24));
        editBtn.setText("Edit");
        editBtn.setEnabled(false);
        editBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editBtnActionPerformed(evt);
            }
        });

        saveBtn.setBackground(new java.awt.Color(184, 145, 104));
        saveBtn.setFont(new java.awt.Font("Montserrat", 1, 14)); // NOI18N
        saveBtn.setForeground(new java.awt.Color(76, 43, 24));
        saveBtn.setText("Save");
        saveBtn.setEnabled(false);
        saveBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveBtnActionPerformed(evt);
            }
        });

        inputDeliveryStaff.setBackground(new java.awt.Color(184, 145, 104));
        inputDeliveryStaff.setFont(new java.awt.Font("Karla", 0, 14)); // NOI18N
        inputDeliveryStaff.setForeground(new java.awt.Color(76, 43, 24));
        inputDeliveryStaff.setEnabled(false);

        inputOrderStatus.setBackground(new java.awt.Color(184, 145, 104));
        inputOrderStatus.setFont(new java.awt.Font("Karla", 0, 14)); // NOI18N
        inputOrderStatus.setForeground(new java.awt.Color(76, 43, 24));
        inputOrderStatus.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Unassigned", "Ongoing", "Delivered" }));
        inputOrderStatus.setEnabled(false);

        inputOrderID.setEditable(false);
        inputOrderID.setBackground(new java.awt.Color(184, 145, 104));
        inputOrderID.setFont(new java.awt.Font("Karla", 0, 14)); // NOI18N
        inputOrderID.setForeground(new java.awt.Color(76, 43, 24));

        customerAddressLabel.setFont(new java.awt.Font("Karla", 0, 14)); // NOI18N
        customerAddressLabel.setForeground(new java.awt.Color(76, 43, 24));
        customerAddressLabel.setText("Customer Address:");

        inputCustomerAddress.setEditable(false);
        inputCustomerAddress.setBackground(new java.awt.Color(184, 145, 104));
        inputCustomerAddress.setColumns(20);
        inputCustomerAddress.setFont(new java.awt.Font("Karla", 0, 14)); // NOI18N
        inputCustomerAddress.setForeground(new java.awt.Color(76, 43, 24));
        inputCustomerAddress.setLineWrap(true);
        inputCustomerAddress.setRows(5);
        jScrollPane1.setViewportView(inputCustomerAddress);

        customerLabel.setFont(new java.awt.Font("Karla", 0, 14)); // NOI18N
        customerLabel.setForeground(new java.awt.Color(76, 43, 24));
        customerLabel.setText("Customer Name:");

        inputCustomer.setEditable(false);
        inputCustomer.setBackground(new java.awt.Color(184, 145, 104));
        inputCustomer.setFont(new java.awt.Font("Karla", 0, 14)); // NOI18N
        inputCustomer.setForeground(new java.awt.Color(76, 43, 24));

        javax.swing.GroupLayout backgroundPanel2Layout = new javax.swing.GroupLayout(backgroundPanel2);
        backgroundPanel2.setLayout(backgroundPanel2Layout);
        backgroundPanel2Layout.setHorizontalGroup(
            backgroundPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(backgroundPanel2Layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(backgroundPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(backgroundPanel2Layout.createSequentialGroup()
                        .addComponent(editBtn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(saveBtn))
                    .addGroup(backgroundPanel2Layout.createSequentialGroup()
                        .addGroup(backgroundPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(customerAddressLabel)
                            .addComponent(orderIDLabel)
                            .addComponent(deliveryStaffLabel)
                            .addComponent(orderStatusLabel)
                            .addComponent(customerLabel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(backgroundPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(inputDeliveryStaff, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(inputOrderStatus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                            .addComponent(inputCustomer, javax.swing.GroupLayout.DEFAULT_SIZE, 200, Short.MAX_VALUE)
                            .addComponent(inputOrderID))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        backgroundPanel2Layout.setVerticalGroup(
            backgroundPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(backgroundPanel2Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(backgroundPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(deliveryStaffLabel)
                    .addComponent(inputDeliveryStaff, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(backgroundPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(orderIDLabel)
                    .addComponent(inputOrderID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(backgroundPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(orderStatusLabel)
                    .addComponent(inputOrderStatus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(backgroundPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(customerLabel)
                    .addComponent(inputCustomer, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(backgroundPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(customerAddressLabel)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(backgroundPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(editBtn)
                    .addComponent(saveBtn))
                .addContainerGap(17, Short.MAX_VALUE))
        );

        backBtn.setBackground(new java.awt.Color(184, 145, 104));
        backBtn.setFont(new java.awt.Font("Montserrat", 1, 14)); // NOI18N
        backBtn.setForeground(new java.awt.Color(76, 43, 24));
        backBtn.setText("Back");
        backBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backBtnActionPerformed(evt);
            }
        });

        displayDeliveryTable.setBackground(new java.awt.Color(230, 207, 201));
        displayDeliveryTable.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        displayDeliveryTable.setFont(new java.awt.Font("Karla", 0, 14)); // NOI18N
        displayDeliveryTable.setForeground(new java.awt.Color(76, 43, 24));
        displayDeliveryTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Delivery Staff", "Order ID", "Order Status", "Customer Name", "Customer Address"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        displayDeliveryTable.setGridColor(new java.awt.Color(230, 207, 201));
        displayDeliveryTable.setSelectionBackground(new java.awt.Color(184, 145, 104));
        displayDeliveryTable.setSelectionForeground(new java.awt.Color(76, 43, 24));
        displayDeliveryTable.setShowVerticalLines(true);
        displayDeliveryTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                displayDeliveryTableMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(displayDeliveryTable);
        // Change Table Header Font
        displayDeliveryTable.getTableHeader().setFont(new Font("Karla", Font.PLAIN, 14));

        // Change Table Column Width
        TableColumnModel columnModel = displayDeliveryTable.getColumnModel();

        columnModel.getColumn(0).setPreferredWidth(125);
        columnModel.getColumn(1).setPreferredWidth(100);
        columnModel.getColumn(2).setPreferredWidth(100);
        columnModel.getColumn(3).setPreferredWidth(125);
        columnModel.getColumn(4).setPreferredWidth(200);

        listDeliveryLabel.setFont(new java.awt.Font("Montserrat", 1, 18)); // NOI18N
        listDeliveryLabel.setForeground(new java.awt.Color(76, 43, 24));
        listDeliveryLabel.setText("List");

        javax.swing.GroupLayout deliveryMgmtPanelLayout = new javax.swing.GroupLayout(deliveryMgmtPanel);
        deliveryMgmtPanel.setLayout(deliveryMgmtPanelLayout);
        deliveryMgmtPanelLayout.setHorizontalGroup(
            deliveryMgmtPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(deliveryMgmtPanelLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(deliveryMgmtPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(detailLabel)
                    .addComponent(backBtn)
                    .addComponent(searchDeliveryLabel)
                    .addComponent(deliveryMgmtLabel)
                    .addComponent(backgroundPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(backgroundPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 45, Short.MAX_VALUE)
                .addGroup(deliveryMgmtPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(listDeliveryLabel)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 630, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(45, Short.MAX_VALUE))
        );
        deliveryMgmtPanelLayout.setVerticalGroup(
            deliveryMgmtPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(deliveryMgmtPanelLayout.createSequentialGroup()
                .addGroup(deliveryMgmtPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(deliveryMgmtPanelLayout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addComponent(deliveryMgmtLabel)
                        .addGap(18, 18, 18)
                        .addComponent(searchDeliveryLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(backgroundPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(detailLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(backgroundPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(deliveryMgmtPanelLayout.createSequentialGroup()
                        .addGap(70, 70, 70)
                        .addComponent(listDeliveryLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 427, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addComponent(backBtn)
                .addGap(21, 21, 21))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(deliveryMgmtPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(deliveryMgmtPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void editBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editBtnActionPerformed
        // Enable button
        saveBtn.setEnabled(true);
        
        // Enable text field
        inputDeliveryStaff.setEnabled(true);
        inputOrderStatus.setEnabled(true);
    }//GEN-LAST:event_editBtnActionPerformed

    private void saveBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveBtnActionPerformed
        // Get Order ID to change the staff or status or both
        String getOldOrderID = (String) displayDeliveryTable.getValueAt(displayDeliveryTable.getSelectedRow(), 1);
        
        String getDeliveryStaff = inputDeliveryStaff.getSelectedItem().toString();
        String getOrderID = inputOrderID.getText();
        String getOrderStatus = inputOrderStatus.getSelectedItem().toString();
        String getCustomer = inputCustomer.getText();
        String getCustomerAddress = inputCustomerAddress.getText();
        
        String[] newChangesArr = new String[] {getDeliveryStaff, getOrderID, getOrderStatus, getCustomer, getCustomerAddress};
        
        SaveSelected ss = new SaveSelected();
        String[][] newChangesArrToSave = ss.saveDelivery(newChangesArr, getOldOrderID);
        
        FlushAndWrite faw = new FlushAndWrite();
        faw.flushAndWrite(newChangesArrToSave, "src/oodms/database/delivery.txt");
        
        int confirmSave = JOptionPane.showConfirmDialog(null, "Are you sure to assign this order to the selected delivery staff? Delivery staff is required to accept the order.", "Confirm assign?", JOptionPane.YES_NO_OPTION);
        
        if(!getDeliveryStaff.equals("Unknown")) {
            if(confirmSave == JOptionPane.YES_OPTION) {
                JOptionPane.showMessageDialog(null, "Order assigned. Waitng for deliver staff to confirm", "Success", JOptionPane.INFORMATION_MESSAGE);
            } else {
                System.out.println("Do nothing");
            }
        } else {
            JOptionPane.showMessageDialog(null, "There is no such delivery staff.", "Error", JOptionPane.ERROR_MESSAGE);
        }
        
        // Disable Button and Text field
        editBtn.setEnabled(false);
        saveBtn.setEnabled(false);
        
        inputDeliveryStaff.setEnabled(false);
        inputOrderStatus.setEnabled(false);
        
        // Clear table
        DefaultTableModel deliveryTable = (DefaultTableModel) displayDeliveryTable.getModel();
        deliveryTable.setRowCount(0);
    }//GEN-LAST:event_saveBtnActionPerformed

    private void searchFilterStatusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchFilterStatusActionPerformed
        // Disable text field
        inputDeliveryStaff.setEnabled(false);
        inputOrderStatus.setEnabled(false);
        
        // Disable button
        editBtn.setEnabled(false);
        saveBtn.setEnabled(false);
        
        // Clear Table
        DefaultTableModel deliveryTable = (DefaultTableModel) displayDeliveryTable.getModel();
        deliveryTable.setRowCount(0);
        
        String getFilterStatus = inputFilterStatus.getSelectedItem().toString();
        
        if(getFilterStatus.equals("")) {
            String[][] getAllDeliveryArr = new Create3DArray().create3D("/oodms/database/delivery.txt");
            
            for(String[] getAllDeliveryData : getAllDeliveryArr) {
                deliveryTable.addRow(getAllDeliveryData);
            }
        } else {
            String[][] getSearchDeliveryArr = new SearchFileData().searchData(getFilterStatus, 2, "/oodms/database/delivery.txt");
            
            for(String[] getSearchDeliveryData : getSearchDeliveryArr) {
                deliveryTable.addRow(getSearchDeliveryData);
            }
        }
    }//GEN-LAST:event_searchFilterStatusActionPerformed

    private void displayDeliveryTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_displayDeliveryTableMouseClicked
        // Enable button
        editBtn.setEnabled(true);
        
        // Disable button and text field
        saveBtn.setEnabled(false);
        
        inputDeliveryStaff.setEnabled(false);
        inputOrderStatus.setEnabled(false);

        int selectedRow = displayDeliveryTable.getSelectedRow();
        
        inputDeliveryStaff.setSelectedItem((String) displayDeliveryTable.getValueAt(selectedRow, 0));
        inputOrderID.setText((String) displayDeliveryTable.getValueAt(selectedRow, 1));
        inputOrderStatus.setSelectedItem((String) displayDeliveryTable.getValueAt(selectedRow, 2));
        inputCustomer.setText((String) displayDeliveryTable.getValueAt(selectedRow, 3));
        inputCustomerAddress.setText((String) displayDeliveryTable.getValueAt(selectedRow, 4));
    }//GEN-LAST:event_displayDeliveryTableMouseClicked

    private void backBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backBtnActionPerformed
        new AdminDashboard().setVisible(true);
        dispose();
    }//GEN-LAST:event_backBtnActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DeliveryMgmtDisplay.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DeliveryMgmtDisplay.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DeliveryMgmtDisplay.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DeliveryMgmtDisplay.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new DeliveryMgmtDisplay().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backBtn;
    private javax.swing.JPanel backgroundPanel1;
    private javax.swing.JPanel backgroundPanel2;
    private javax.swing.JLabel customerAddressLabel;
    private javax.swing.JLabel customerLabel;
    private javax.swing.JLabel deliveryMgmtLabel;
    private javax.swing.JPanel deliveryMgmtPanel;
    private javax.swing.JLabel deliveryStaffLabel;
    private javax.swing.JLabel detailLabel;
    private javax.swing.JTable displayDeliveryTable;
    private javax.swing.JButton editBtn;
    private javax.swing.JLabel filterStatusLabel;
    private javax.swing.JTextField inputCustomer;
    private javax.swing.JTextArea inputCustomerAddress;
    private javax.swing.JComboBox<String> inputDeliveryStaff;
    private javax.swing.JComboBox<String> inputFilterStatus;
    private javax.swing.JTextField inputOrderID;
    private javax.swing.JComboBox<String> inputOrderStatus;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel listDeliveryLabel;
    private javax.swing.JLabel orderIDLabel;
    private javax.swing.JLabel orderStatusLabel;
    private javax.swing.JButton saveBtn;
    private javax.swing.JLabel searchDeliveryLabel;
    private javax.swing.JButton searchFilterStatus;
    // End of variables declaration//GEN-END:variables
}
