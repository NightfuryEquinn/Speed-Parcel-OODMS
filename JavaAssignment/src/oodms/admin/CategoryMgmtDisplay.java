package oodms.admin;

import java.awt.Font;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumnModel;
import oodms.oop.AddNewCategory;
import oodms.oop.CheckSimilarity;
import oodms.oop.CountChildren;
import oodms.oop.Create3DArray;
import oodms.oop.DeleteSelected;
import oodms.oop.FlushAndWrite;
import oodms.oop.SaveSelected;
import oodms.oop.SearchFileData;

public class CategoryMgmtDisplay extends javax.swing.JFrame {

    /**
     * Creates new form CategoryMgmtDisplay
     */
    public CategoryMgmtDisplay() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        categoryMgmtPanel = new javax.swing.JPanel();
        categoryMgmtLabel = new javax.swing.JLabel();
        searchCategoryLabel = new javax.swing.JLabel();
        backgroundPanel1 = new javax.swing.JPanel();
        searchCatIDLabel = new javax.swing.JLabel();
        inputSearchCatName = new javax.swing.JTextField();
        searchCatIDBtn = new javax.swing.JButton();
        detailLabel = new javax.swing.JLabel();
        backgroundPanel2 = new javax.swing.JPanel();
        catNameLabel = new javax.swing.JLabel();
        descriptionLabel = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        inputDescription = new javax.swing.JTextArea();
        inputCatName = new javax.swing.JTextField();
        addBtn = new javax.swing.JButton();
        editBtn = new javax.swing.JButton();
        saveBtn = new javax.swing.JButton();
        deleteBtn = new javax.swing.JButton();
        backBtn = new javax.swing.JButton();
        listCatLabel = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        displayCatTable = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        categoryMgmtPanel.setBackground(new java.awt.Color(250, 242, 224));

        categoryMgmtLabel.setFont(new java.awt.Font("Montserrat", 1, 24)); // NOI18N
        categoryMgmtLabel.setForeground(new java.awt.Color(76, 43, 24));
        categoryMgmtLabel.setText("Category Management");

        searchCategoryLabel.setFont(new java.awt.Font("Montserrat", 1, 18)); // NOI18N
        searchCategoryLabel.setForeground(new java.awt.Color(76, 43, 24));
        searchCategoryLabel.setText("Search");

        backgroundPanel1.setBackground(new java.awt.Color(230, 207, 201));

        searchCatIDLabel.setFont(new java.awt.Font("Karla", 0, 14)); // NOI18N
        searchCatIDLabel.setForeground(new java.awt.Color(76, 43, 24));
        searchCatIDLabel.setText("Enter Name:");

        inputSearchCatName.setBackground(new java.awt.Color(184, 145, 104));
        inputSearchCatName.setFont(new java.awt.Font("Karla", 0, 14)); // NOI18N
        inputSearchCatName.setForeground(new java.awt.Color(76, 43, 24));

        searchCatIDBtn.setBackground(new java.awt.Color(184, 145, 104));
        searchCatIDBtn.setFont(new java.awt.Font("Montserrat", 1, 14)); // NOI18N
        searchCatIDBtn.setForeground(new java.awt.Color(76, 43, 24));
        searchCatIDBtn.setText("Search");
        searchCatIDBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchCatIDBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout backgroundPanel1Layout = new javax.swing.GroupLayout(backgroundPanel1);
        backgroundPanel1.setLayout(backgroundPanel1Layout);
        backgroundPanel1Layout.setHorizontalGroup(
            backgroundPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(backgroundPanel1Layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(searchCatIDLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 34, Short.MAX_VALUE)
                .addComponent(inputSearchCatName, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(searchCatIDBtn)
                .addGap(16, 16, 16))
        );
        backgroundPanel1Layout.setVerticalGroup(
            backgroundPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(backgroundPanel1Layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(backgroundPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(searchCatIDLabel)
                    .addComponent(inputSearchCatName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(searchCatIDBtn))
                .addContainerGap(15, Short.MAX_VALUE))
        );

        detailLabel.setFont(new java.awt.Font("Montserrat", 1, 18)); // NOI18N
        detailLabel.setForeground(new java.awt.Color(76, 43, 24));
        detailLabel.setText("Details");

        backgroundPanel2.setBackground(new java.awt.Color(230, 207, 201));

        catNameLabel.setFont(new java.awt.Font("Karla", 0, 14)); // NOI18N
        catNameLabel.setForeground(new java.awt.Color(76, 43, 24));
        catNameLabel.setText("Category Name:");

        descriptionLabel.setFont(new java.awt.Font("Karla", 0, 14)); // NOI18N
        descriptionLabel.setForeground(new java.awt.Color(76, 43, 24));
        descriptionLabel.setText("Description:");

        inputDescription.setEditable(false);
        inputDescription.setBackground(new java.awt.Color(184, 145, 104));
        inputDescription.setColumns(20);
        inputDescription.setFont(new java.awt.Font("Karla", 0, 14)); // NOI18N
        inputDescription.setForeground(new java.awt.Color(76, 43, 24));
        inputDescription.setLineWrap(true);
        inputDescription.setRows(5);
        jScrollPane1.setViewportView(inputDescription);

        inputCatName.setEditable(false);
        inputCatName.setBackground(new java.awt.Color(184, 145, 104));
        inputCatName.setFont(new java.awt.Font("Karla", 0, 14)); // NOI18N
        inputCatName.setForeground(new java.awt.Color(76, 43, 24));

        addBtn.setBackground(new java.awt.Color(184, 145, 104));
        addBtn.setFont(new java.awt.Font("Montserrat", 1, 14)); // NOI18N
        addBtn.setForeground(new java.awt.Color(76, 43, 24));
        addBtn.setText("Add");
        addBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addBtnActionPerformed(evt);
            }
        });

        editBtn.setBackground(new java.awt.Color(184, 145, 104));
        editBtn.setFont(new java.awt.Font("Montserrat", 1, 14)); // NOI18N
        editBtn.setForeground(new java.awt.Color(76, 43, 24));
        editBtn.setText("Edit");
        editBtn.setEnabled(false);
        editBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editBtnActionPerformed(evt);
            }
        });

        saveBtn.setBackground(new java.awt.Color(184, 145, 104));
        saveBtn.setFont(new java.awt.Font("Montserrat", 1, 14)); // NOI18N
        saveBtn.setForeground(new java.awt.Color(76, 43, 24));
        saveBtn.setText("Save");
        saveBtn.setEnabled(false);
        saveBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveBtnActionPerformed(evt);
            }
        });

        deleteBtn.setBackground(new java.awt.Color(184, 145, 104));
        deleteBtn.setFont(new java.awt.Font("Montserrat", 1, 14)); // NOI18N
        deleteBtn.setForeground(new java.awt.Color(76, 43, 24));
        deleteBtn.setText("Delete");
        deleteBtn.setEnabled(false);
        deleteBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout backgroundPanel2Layout = new javax.swing.GroupLayout(backgroundPanel2);
        backgroundPanel2.setLayout(backgroundPanel2Layout);
        backgroundPanel2Layout.setHorizontalGroup(
            backgroundPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(backgroundPanel2Layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(backgroundPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(backgroundPanel2Layout.createSequentialGroup()
                        .addComponent(addBtn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(editBtn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(saveBtn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(deleteBtn))
                    .addGroup(backgroundPanel2Layout.createSequentialGroup()
                        .addGroup(backgroundPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(catNameLabel, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(descriptionLabel, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(backgroundPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(inputCatName)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 235, Short.MAX_VALUE))))
                .addContainerGap(22, Short.MAX_VALUE))
        );
        backgroundPanel2Layout.setVerticalGroup(
            backgroundPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(backgroundPanel2Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(backgroundPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(catNameLabel)
                    .addComponent(inputCatName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(backgroundPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(descriptionLabel)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 89, Short.MAX_VALUE)
                .addGroup(backgroundPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addBtn)
                    .addComponent(editBtn)
                    .addComponent(saveBtn)
                    .addComponent(deleteBtn))
                .addGap(14, 14, 14))
        );

        backBtn.setBackground(new java.awt.Color(184, 145, 104));
        backBtn.setFont(new java.awt.Font("Montserrat", 1, 14)); // NOI18N
        backBtn.setForeground(new java.awt.Color(76, 43, 24));
        backBtn.setText("Back");

        listCatLabel.setFont(new java.awt.Font("Montserrat", 1, 18)); // NOI18N
        listCatLabel.setForeground(new java.awt.Color(76, 43, 24));
        listCatLabel.setText("List");

        displayCatTable.setBackground(new java.awt.Color(230, 207, 201));
        displayCatTable.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        displayCatTable.setFont(new java.awt.Font("Karla", 0, 14)); // NOI18N
        displayCatTable.setForeground(new java.awt.Color(76, 43, 24));
        displayCatTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Category Name", "Children Items", "Description"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Integer.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        displayCatTable.setGridColor(new java.awt.Color(230, 207, 201));
        displayCatTable.setSelectionBackground(new java.awt.Color(184, 145, 104));
        displayCatTable.setSelectionForeground(new java.awt.Color(76, 43, 24));
        displayCatTable.setShowVerticalLines(true);
        displayCatTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                displayCatTableMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(displayCatTable);
        // Change Table Header Font
        displayCatTable.getTableHeader().setFont(new Font("Karla", Font.PLAIN, 14));

        // Change Table Column Width
        TableColumnModel columnModel = displayCatTable.getColumnModel();

        columnModel.getColumn(0).setPreferredWidth(125);
        columnModel.getColumn(1).setPreferredWidth(150);
        columnModel.getColumn(2).setPreferredWidth(275);

        javax.swing.GroupLayout categoryMgmtPanelLayout = new javax.swing.GroupLayout(categoryMgmtPanel);
        categoryMgmtPanel.setLayout(categoryMgmtPanelLayout);
        categoryMgmtPanelLayout.setHorizontalGroup(
            categoryMgmtPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(categoryMgmtPanelLayout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(categoryMgmtPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(categoryMgmtLabel)
                    .addComponent(searchCategoryLabel)
                    .addComponent(backgroundPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(detailLabel)
                    .addComponent(backBtn)
                    .addComponent(backgroundPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 27, Short.MAX_VALUE)
                .addGroup(categoryMgmtPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 640, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(listCatLabel))
                .addGap(26, 26, 26))
        );
        categoryMgmtPanelLayout.setVerticalGroup(
            categoryMgmtPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(categoryMgmtPanelLayout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(categoryMgmtLabel)
                .addGap(18, 18, 18)
                .addGroup(categoryMgmtPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(searchCategoryLabel)
                    .addComponent(listCatLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(categoryMgmtPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(categoryMgmtPanelLayout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 441, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(categoryMgmtPanelLayout.createSequentialGroup()
                        .addComponent(backgroundPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 41, Short.MAX_VALUE)
                        .addComponent(detailLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(backgroundPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(backBtn)
                        .addGap(19, 19, 19))))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(categoryMgmtPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(categoryMgmtPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void addBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addBtnActionPerformed
        // Unselect Row
        displayCatTable.clearSelection();

        // Get value from user
        inputCatName.setEditable(true);
        inputDescription.setEditable(true);
        
        String getCatName = inputCatName.getText();
        String getDescription = inputDescription.getText();
        
        boolean checkCat = new CheckSimilarity().catChecker(getCatName);
        
        if(!checkCat) {
            AddNewCategory category = new AddNewCategory(getCatName, getDescription);
        }
    }//GEN-LAST:event_addBtnActionPerformed

    private void editBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editBtnActionPerformed
        inputCatName.setEditable(true);
        inputDescription.setEditable(true);
        
        saveBtn.setEnabled(true);
    }//GEN-LAST:event_editBtnActionPerformed

    private void saveBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveBtnActionPerformed
        // Get old category
        String getOldCatName = (String) displayCatTable.getValueAt(displayCatTable.getSelectedRow(), 0);

        // Get Text Field value
        String getCatName = (String) inputCatName.getText();
        String getDescription = (String) inputDescription.getText();
        
        // Write into an array
        String[] newChangesArr = new String[] {getCatName, getDescription};
        
        boolean checkCat = new CheckSimilarity().catChecker(getCatName);
        
        if(!checkCat) {
            SaveSelected ss = new SaveSelected();
            String[][] newChangesArrToSave = ss.saveCategory(newChangesArr, getOldCatName);
            
            new FlushAndWrite().flushAndWrite(newChangesArrToSave, "src/oodms/database/category.txt");
        }
        
        // Reset text fields and button
        inputSearchCatName.setText("");
        
        inputCatName.setText("");
        inputDescription.setText("");
        
        inputCatName.setEditable(false);
        inputDescription.setEditable(false);
        
        editBtn.setEnabled(false);
        saveBtn.setEnabled(false);
        deleteBtn.setEnabled(false);
        
        // Clear Table
        DefaultTableModel catTable = (DefaultTableModel) displayCatTable.getModel();
        catTable.setRowCount(0);
    }//GEN-LAST:event_saveBtnActionPerformed

    private void deleteBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteBtnActionPerformed
        int selectedRow = displayCatTable.getSelectedRow();
        
        String selectedCatName = (String) displayCatTable.getValueAt(selectedRow, 0);
        
        String[][] ds = new DeleteSelected().deleteSelected(selectedCatName, "/oodms/database/category.txt");
        
        FlushAndWrite faw = new FlushAndWrite();
        faw.flushAndWrite(ds, "src/oodms/database/category.txt");
        
        // Reset text field and button
        inputSearchCatName.setText("");
        
        inputCatName.setText("");
        inputDescription.setText("");
        
        inputCatName.setEditable(false);
        inputDescription.setEditable(false);
        
        editBtn.setEnabled(false);
        saveBtn.setEnabled(false);
        deleteBtn.setEnabled(false);
        
        // Clear Table
        DefaultTableModel catTable = (DefaultTableModel) displayCatTable.getModel();
        catTable.setRowCount(0);
    }//GEN-LAST:event_deleteBtnActionPerformed

    private void searchCatIDBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchCatIDBtnActionPerformed
        // Disable text field and button
        inputCatName.setEditable(false);
        inputDescription.setEditable(false);
        
        editBtn.setEnabled(false);
        saveBtn.setEnabled(false);
        deleteBtn.setEnabled(false);
        
        DefaultTableModel catTable = (DefaultTableModel) displayCatTable.getModel();
        catTable.setRowCount(0);
        
        String getSearchCat = inputSearchCatName.getText();
        
        if(getSearchCat.isBlank()) {
            String[][] allCatArr = new Create3DArray().create3D("/oodms/database/category.txt");
            
            // Count the number of children of each category
            String[][] getCountChildren = new CountChildren().getCountChildren("/oodms/database/item.txt", 2);
            
            // Loop all data
            for(String[] catArr : allCatArr) {
                for(String[] getCountChildrenData : getCountChildren) {
                    if(getCountChildrenData[0].equals(catArr[0])) {
                        String[] catDataArr = new String[] {catArr[0], getCountChildrenData[1], catArr[1]};
                        catTable.addRow(catDataArr);
                    }
                }
            }
        } else {
            String[][] allSearchCatArr = new SearchFileData().searchData(getSearchCat, 0, "/oodms/database/category.txt");
            
            String[][] getSearchCountChildren = new CountChildren().getCountChildren("/oodms/database/item.txt", 2);
            
            for(String[] searchCatArr : allSearchCatArr) {
                for(String[] getSearchCountChildrenData : getSearchCountChildren) {
                    if(getSearchCountChildrenData[0].equals(searchCatArr[0])) {
                        String[] searchCatDataArr = new String[] {searchCatArr[0], getSearchCountChildrenData[1], searchCatArr[1]};
                        catTable.addRow(searchCatDataArr);
                    }
                }
            }
            
        }
    }//GEN-LAST:event_searchCatIDBtnActionPerformed

    private void displayCatTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_displayCatTableMouseClicked
        // Disable text field and button
        inputCatName.setEditable(false);
        inputDescription.setEditable(false);
        
        // Enable buttons
        editBtn.setEnabled(true);
        saveBtn.setEnabled(false);
        deleteBtn.setEnabled(true);
        
        int selectedRow = displayCatTable.getSelectedRow();
        
        inputCatName.setText((String) displayCatTable.getValueAt(selectedRow, 0));
        inputDescription.setText((String) displayCatTable.getValueAt(selectedRow, 2));
    }//GEN-LAST:event_displayCatTableMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CategoryMgmtDisplay.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CategoryMgmtDisplay.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CategoryMgmtDisplay.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CategoryMgmtDisplay.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CategoryMgmtDisplay().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addBtn;
    private javax.swing.JButton backBtn;
    private javax.swing.JPanel backgroundPanel1;
    private javax.swing.JPanel backgroundPanel2;
    private javax.swing.JLabel catNameLabel;
    private javax.swing.JLabel categoryMgmtLabel;
    private javax.swing.JPanel categoryMgmtPanel;
    private javax.swing.JButton deleteBtn;
    private javax.swing.JLabel descriptionLabel;
    private javax.swing.JLabel detailLabel;
    private javax.swing.JTable displayCatTable;
    private javax.swing.JButton editBtn;
    private javax.swing.JTextField inputCatName;
    private javax.swing.JTextArea inputDescription;
    private javax.swing.JTextField inputSearchCatName;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel listCatLabel;
    private javax.swing.JButton saveBtn;
    private javax.swing.JButton searchCatIDBtn;
    private javax.swing.JLabel searchCatIDLabel;
    private javax.swing.JLabel searchCategoryLabel;
    // End of variables declaration//GEN-END:variables
}
